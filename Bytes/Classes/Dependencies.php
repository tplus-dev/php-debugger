<?php

	/**
	 * Dependencies class
	 *
	 * @author Mark HÃ¼nermund Jensen
	 */
	
	namespace Bytes;

	class Dependencies {

	    /* ======================================================================================================
	       PROPERTIES
	    ====================================================================================================== */

	    /**
	     * List of required components
	     * @var array
	     */
	    
	    private $Implementations 			= [];

	    /**
	     * List of grouped requirements
	     * @var
	     */
	    
	    private $Groups 					= [];

	    /**
	     * Mode between strict requirement or "if available". True is strict.
	     * @var bool
	     */
	    
	    private $StrictRequirement			= True;

	    /* ======================================================================================================
	       SET MODE: STRICT
	    ====================================================================================================== */

	    /**
	     * Sets dependency mode to strict
	     *
	     * @access public
	     * @return Dependencies
	     */
	    
	    public function Must ( ): Dependencies {

	        /* ------------------------------------------------------------------------------------------------------
	           SET
	        ------------------------------------------------------------------------------------------------------ */

	        $this -> StrictRequirement 		= True;

	        /* ------------------------------------------------------------------------------------------------------
	           RETURN
	        ------------------------------------------------------------------------------------------------------ */

	        return $this;

	    }

	    /* ======================================================================================================
	       SET MODE: IF AVAILABLE
	    ====================================================================================================== */

	    /**
	     * Sets dependency mode to "if available"
	     *
	     * @access public
	     * @return Dependencies
	     */
	    
	    public function IfAvailable ( ): Dependencies {

	        /* ------------------------------------------------------------------------------------------------------
	           SET
	        ------------------------------------------------------------------------------------------------------ */

	        $this -> StrictRequirement 		= False;

	        /* ------------------------------------------------------------------------------------------------------
	           RETURN
	        ------------------------------------------------------------------------------------------------------ */

	        return $this;

	    }

	    /* ======================================================================================================
	       PROVIDE SUBCLASSES OF
	    ====================================================================================================== */

	    /**
	     * Sets a requirement to provide available sub-classes of a parent class
	     * 
	     * @access public
	     * @param string $Group Name of parent class
	     * @return Dependencies
	     */
	    
	    public function ProvideGroup ( string $Group ): Dependencies {

	        /* ------------------------------------------------------------------------------------------------------
	           ADD
	        ------------------------------------------------------------------------------------------------------ */

        	$this -> Groups[] 		= [

										'Group'			=> (string) $Group

									];

	        /* ------------------------------------------------------------------------------------------------------
	           RETURN
	        ------------------------------------------------------------------------------------------------------ */

	    	return $this;

	    }

	    /* ======================================================================================================
	       PROVIDE
	    ====================================================================================================== */

	    /**
	     * Sets information about the need for a given implementation
	     * 
	     * @access public
	     * @param string $Implementation
	     * @todo Verify that the implementation is not already requested
	     * @return Dependencies
	     */
	    
	    public function Provide ( string $Implementation ): Dependencies {

	        /* ------------------------------------------------------------------------------------------------------
	           ADD
	        ------------------------------------------------------------------------------------------------------ */

        	$this -> Implementations[] 		= [

        										'Name' 					=> (string) $Implementation,
        										'StrictRequirement' 	=> $this -> StrictRequirement

        									];

	        /* ------------------------------------------------------------------------------------------------------
	           RETURN
	        ------------------------------------------------------------------------------------------------------ */

	    	return $this;

	    }

	    /* ======================================================================================================
	       LIST REQUIREMENTS
	    ====================================================================================================== */

	    /**
	     * Return the list of requirements
	     *
	     * @access public
	     * @return array
	     */
	    
	    public function ListRequirements ( ): array {

	        /* ------------------------------------------------------------------------------------------------------
	           RETURN
	        ------------------------------------------------------------------------------------------------------ */

	        return [

	        	'Implementations' 		=> $this -> Implementations,
	        	'Groups' 				=> $this -> Groups

	        ];

	    }

	}